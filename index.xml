<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Arnes notes</title>
    <link>https://notes.arne.me/</link>
    <description>Recent content on Arnes notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://notes.arne.me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Blue yeti</title>
      <link>https://notes.arne.me/blue-yeti/</link>
      <pubDate>Sat, 02 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/blue-yeti/</guid>
      <description>The yeti is a USB-microphone by Blue (see official site   ).
It ranks #8 on Marco Arments Podcasting Microphones Mega-Review   , here&amp;rsquo;s what Marco has to say:
 &amp;hellip; it’s a great value, and under ideal circumstances — close-up use in a silent, soft room with a pop filter — it can yield excellent sound quality.
 The thing to look out for is that it picks up a lot of room echo.</description>
    </item>
    
    <item>
      <title>Git Co-authored-by</title>
      <link>https://notes.arne.me/git-co-authored-by/</link>
      <pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/git-co-authored-by/</guid>
      <description>Suppose you&amp;rsquo;re doing some pair-programming with a co-worker. That means only one of you can commit the work you&amp;rsquo;re both doing.
But you can credit the other party by using a Git feature called Co-authored-by. This will show up on GitHub (and probably other clients as well). See GitHubs documentation   on how it will look like.
How to When writing the commit message, add an empty line and then Co-authored-by: Name &amp;lt;email&amp;gt;, for example:</description>
    </item>
    
    <item>
      <title>Reset Password on Windows</title>
      <link>https://notes.arne.me/reset-password-on-windows/</link>
      <pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/reset-password-on-windows/</guid>
      <description>So you forgot your Windows passwort? This is how you can fix it:
Prerequisites  No full disk encryption (BitLocker) No online account (use the Microsoft services to reset the password)  Reset  Download the latest edition of the Offline NT Password &amp;amp; Registry Editor at pogostick.net   (click on Bootdisk and scroll to Download). If you have another Windows computer available, you can do the USB stick version although the site notices that CDs are more reliable Burn/copy the software to a CD/USB stick Make sure your BIOS can boot from the medium (search the for a guide for the specific vendor) Start Windows, click Restart but enter the BIOS on restart.</description>
    </item>
    
    <item>
      <title>Learn Rust</title>
      <link>https://notes.arne.me/learn-rust/</link>
      <pubDate>Sat, 17 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/learn-rust/</guid>
      <description>So you want to learn Rust ? Here&amp;rsquo;s a collection of resources that might be of help.
Things I would try first There is an official Learn Rust   page that lists great resources, including:
 The Rust Programming Langauge (Book)   , I highly recommend buying the paperback copy if you can afford it rustlings    Rust by Example     </description>
    </item>
    
    <item>
      <title>Evergreen Notes</title>
      <link>https://notes.arne.me/evergreen-notes/</link>
      <pubDate>Sun, 11 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/evergreen-notes/</guid>
      <description>Evergreen notes are meant to evolve and accumulate over time. Most people only us transient notes which don&amp;rsquo;t accumulate and often go stale.
Principles These are taken from Andy Matuschaks note   , which goes way more in depth.
Evergreen notes should be atomic Evergreen should be about only one thing but capture the entirety of that thing. That makes it easy to form connections across topics and contexts.</description>
    </item>
    
    <item>
      <title>Aesthetic-Accessibility Paradox</title>
      <link>https://notes.arne.me/aesthetic-accessibility-paradox/</link>
      <pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/aesthetic-accessibility-paradox/</guid>
      <description>In a thread on Twitter   , Cat Noone explains why there is no such thing.
 Finding a middle ground between what is aesthetically pleasing and what is simultaneously usable by everyone is your job as a designer.
  Form follows function every time Accessibility about is permanent, temporal and situational scenarios (e.g. one arm, arm injury or new parent)  </description>
    </item>
    
    <item>
      <title>Docker Secrets</title>
      <link>https://notes.arne.me/docker-secrets/</link>
      <pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/docker-secrets/</guid>
      <description>Using the --secret flag allows you to mount secrets into your Docker container in a safe way where they won&amp;rsquo;t end up in the final image (official documentation   ).
Example Let&amp;rsquo;s say we want to download a file that is protected using basic auth. Our Dockerfile would look like this:
RUN --mount=type=secret,id=auth \  curl -O -u &amp;#34;$(cat /run/secrets/auth)&amp;#34; http://example.org/some-fileWhen building the container we need to pass the --secret flag and provide a file, like this:</description>
    </item>
    
    <item>
      <title>68 Bits of Unsolicited Advice</title>
      <link>https://notes.arne.me/68-bits-of-unsolicited-advice/</link>
      <pubDate>Wed, 02 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/68-bits-of-unsolicited-advice/</guid>
      <description>Kevin Kelly shares some Wisdom in his blogpost 68 Bits of Unsolicited Advice   :
 It’s my birthday. I’m 68. I feel like pulling up a rocking chair and dispensing advice to the young ‘uns. Here are 68 pithy bits of unsolicited advice which I offer as my birthday present to all of you.
 These are the things that resonated with me at the time of writing this:</description>
    </item>
    
    <item>
      <title>99 Additional Bits of Unsolicited Advice</title>
      <link>https://notes.arne.me/99-additional-bits-of-unsolicited-advice/</link>
      <pubDate>Wed, 02 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/99-additional-bits-of-unsolicited-advice/</guid>
      <description>Kevin Kelly shares even more Wisdom in his second unsolicited advice blogpost 99 Additional Bits of Unsolicited Advice   :
 I have another birthday, and another bunch of unsolicited advice.
 These are the things that resonated with me at the time of writing this:
 That thing that made you weird as a kid could make you great as an adult — if you don’t lose it. If you have any doubt at all about being able to carry a load in one trip, do yourself a huge favor and make two trips.</description>
    </item>
    
    <item>
      <title>Fast Webfonts</title>
      <link>https://notes.arne.me/fast-webfonts/</link>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/fast-webfonts/</guid>
      <description>Iain Bean shares some tricks on his blog   to make your Webfonts faster.
Use the most modern file formats Web Open Font Format 2.0 (WOFF2) is the smallest and most efficient file format for web fonts as of May 2021. Make sure it appears before older file formats as a browser will use the first font it understands. If you care about IE11 you&amp;rsquo;ll need WOFF as well. If you care about IE8 as well you&amp;rsquo;ll need TTF (or some other old format).</description>
    </item>
    
    <item>
      <title>Org Mode 101</title>
      <link>https://notes.arne.me/org-mode-101/</link>
      <pubDate>Sun, 30 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/org-mode-101/</guid>
      <description>This is a quick reference of the Org mode syntax, based on the official Quickstart document   .
Metadata At the top of each file is so-called metadata. Most files will at least have #+title. Example:
#+TITLE: Org Mode 101 #+AUTHOR: Arne Bahlo #+DATE: 2021-05-30 Outlining You create headlines by prefixing a line with a number of stars (*):
*heading 1 ** heading 2 *** heading 3 Text formatting  /italics/ *bold* \~code\~ =literal= _underline_ +strikethrough+  Links [[destination][title]] or [[destinaton]]</description>
    </item>
    
    <item>
      <title>.htaccess</title>
      <link>https://notes.arne.me/htaccess/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/htaccess/</guid>
      <description>A directory-level configuration file, used for URL redirection, access control, and more, most commonly used in Apache and managed by SysOps .
Examples Redirecting a single URL: Redirect /index.html /some-other-page/ Redirecting an old directory to a new directory RedirectRule ^old/(.*)$ /$1 [R=301,NC,L] Hiding a folder RedirectMatch 404 /\.git </description>
    </item>
    
    <item>
      <title>35 Principles for 35 Years</title>
      <link>https://notes.arne.me/35-principles-for-35-years/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/35-principles-for-35-years/</guid>
      <description>Shawn Wang compiles some Wisdom in this blogpost   :
 I turn 35 today. Here are 35 principles I have accumulated and try to live by [&amp;hellip;].
 Here are the things from that post which resonated with me:
Life is too Short for Short Term Games Copied from these Tweets   :
 Systems &amp;gt; Goals, Discipline &amp;gt; Motivation, Trust &amp;gt; Distrust, Principles &amp;gt; Tactics, Writing &amp;gt; Reading, Vulnerability &amp;gt; Confidence, North Stars &amp;gt; Low Hanging Fruit, Trends &amp;gt; News, Habits &amp;gt; Sprints, Questions &amp;gt; Answers, Problems &amp;gt; Solutions, People &amp;gt; Projects, Listening &amp;gt; Arguing, Empathy &amp;gt; Enmity, Values &amp;gt; Metrics, Actions &amp;gt; Reactions, Health &amp;gt; Wealth, Forgiveness &amp;gt; Revenge, Automation &amp;gt; Decision, Delegation &amp;gt; Control, Growth &amp;gt; Fixed mindset, &amp;ldquo;Yes, and&amp;rdquo; &amp;gt; &amp;ldquo;Well, actually&amp;rdquo;, Community &amp;gt; Solo effort, Identity &amp;gt; Outcomes, Science &amp;gt; Social Science, Integrity &amp;gt; Capability, Designing &amp;gt; Forecasting, History &amp;gt; Geography, Micro &amp;gt; Macro econ.</description>
    </item>
    
    <item>
      <title>About these notes</title>
      <link>https://notes.arne.me/about-these-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/about-these-notes/</guid>
      <description>Hey, I&amp;rsquo;m Arne Bahlo   and these are my notes.
I try to collect my knowledge and I&amp;rsquo;m adding new notes almost every day.
Check out the Index with all notes, alternatively here&amp;rsquo;s a small selection of good entrypoints:
 Software Engineering  SysOps  Wisdom  Philosophy  Leadership   The source of this wiki is available on GitHub: bahlo/arnes-notes   . If you want a personal wiki like this but don&amp;rsquo;t know how to build it, let me know, I&amp;rsquo;ll happily help you find a solution: hey@arne.</description>
    </item>
    
    <item>
      <title>Accessibility</title>
      <link>https://notes.arne.me/accessibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/accessibility/</guid>
      <description>Accessibility (or short a11y) is the design of products, services or environments to be usable by people with disabilities.</description>
    </item>
    
    <item>
      <title>Anchored headings in Hugo</title>
      <link>https://notes.arne.me/anchored-headings-in-hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/anchored-headings-in-hugo/</guid>
      <description>If you want to have anchored headings in Hugo (e.g. having a # before each headings that links to the heading directly), this is how you do it (found in a post on hugos forum   ).
Create a layouts/_default/_markup/render-heading.html and put the following code in it:
&amp;lt;h{{ .Level }} id=&amp;#34;{{ .Anchor | safeURL }}&amp;#34;&amp;gt; &amp;lt;a class=&amp;#34;heading-anchor&amp;#34; href=&amp;#34;#{{ .Anchor | safeURL }}&amp;#34;&amp;gt; {{ strings.Repeat .Level &amp;#34;#&amp;#34; }} &amp;lt;/a&amp;gt; {{ .</description>
    </item>
    
    <item>
      <title>ANSI Escape Codes</title>
      <link>https://notes.arne.me/ansi-escape-codes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/ansi-escape-codes/</guid>
      <description>When you work in the terminal (e.g. on Unix ), having colors and text formatting often improves the user experience.
There is a great post on Stack Overflow called List of ANSI color escape sequences   which goes into detail on all supported escape codes.
Here is a basic selection:
   Code Usage     \033[1m Bold   \033[3m Italic   \033[4m Underline   \033[38;2;&amp;lt;r&amp;gt;;&amp;lt;g&amp;gt;;&amp;lt;b&amp;gt;m Set RGB foreground color   \033[48;2;&amp;lt;r&amp;gt;;&amp;lt;g&amp;gt;;&amp;lt;b&amp;gt;m Set RGB background color    There&amp;rsquo;s a list of terminals   that support RGB, most importantly Terminal.</description>
    </item>
    
    <item>
      <title>Automatic darkmode for Emacs</title>
      <link>https://notes.arne.me/automatic-darkmode-for-emacs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/automatic-darkmode-for-emacs/</guid>
      <description>Emacs doesn&amp;rsquo;t have a native way of detecting dark mode (yet?). But since it&amp;rsquo;s emacs, you can build it yourself, here&amp;rsquo;s how.
macOS On macOS you can use the following code to check the system appearance every two seconds and on change use a dark theme.
This is loosely based on Automatic Emacs theme switching in OSX dark mode   , with the added bonnus that this is fully automatic:</description>
    </item>
    
    <item>
      <title>Automatic darkmode for iTerm</title>
      <link>https://notes.arne.me/automatic-darkmode-for-iterm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/automatic-darkmode-for-iterm/</guid>
      <description>iTerm2 supports dark and light mode, but it won&amp;rsquo;t change the colors automatically.
But we&amp;rsquo;re lucky! iTerm has great scripting support. See the Scripting Documentation   . We can use that to automatically switch profiles based on the system appearance.
Here&amp;rsquo;s how:
 Launch iTerm, then in the menubar click Scripts → AutoLaunch → Install Python runtime Create two profiles and name them Light and Dark. It probably makes sense to create one profile to your liking with a light theme, duplicate it and set the dark theme on the duplicate.</description>
    </item>
    
    <item>
      <title>Automatic darkmode for Vim</title>
      <link>https://notes.arne.me/automatic-darkmode-for-vim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/automatic-darkmode-for-vim/</guid>
      <description>Vim doesn&amp;rsquo;t have a native way of detecting system appearance yet, but you can do it yourself. Here&amp;rsquo;s how.
macOS On macOS you can add the following lines to your .vimrc to check the system appearance every 2s and change the theme accordingly:
&amp;quot; Automatically switch light/dark background + theme function! SetAppearance(...) try let s:mode = systemlist(&amp;quot;defaults read -g AppleInterfaceStyle&amp;quot;)[0] let s:new_bg = &amp;quot;&amp;quot; let s:new_theme = &amp;quot;&amp;quot; if s:mode ==?</description>
    </item>
    
    <item>
      <title>Baader Meinhof Phenomenon</title>
      <link>https://notes.arne.me/baader-meinhof-phenomenon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/baader-meinhof-phenomenon/</guid>
      <description>The Baader Meinhof Phenomenon is a Cognitive Biase in which you notice a particular thing everywhere after noticing it somewhere.
A common example is buying a car and suddenyl seeing it everywhere.
Why is it called the Baader-Meinhof Phenomenon? Kate Kershner has the following explanation in her What&amp;amp;rsquo;s the Baader-Meinhof phenomenon?   :
 It all started in the comments section of a newspaper called the Minnesota St. Pauls Pioneer Press.</description>
    </item>
    
    <item>
      <title>Barrels and Ammunition</title>
      <link>https://notes.arne.me/barrels-and-ammunition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/barrels-and-ammunition/</guid>
      <description>Conor Dewey summarizes a talk by Keith Rabois on his blog   . The quotes in this document are from the talk, the points mostly from the article.
The idea  If you think about people, there are two categories of high-quality people: there is the ammunition, and then there are the barrels. You can add all the ammunition you want, but if you have only five barrels in your company, you can literally do only five things simultaneously.</description>
    </item>
    
    <item>
      <title>CircuitPython</title>
      <link>https://notes.arne.me/circuitpython/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/circuitpython/</guid>
      <description>CircuitPython   is an open-source derivative of the MicroPython   programming language (which is compatible to Python , but optimized for Embedded systems ).</description>
    </item>
    
    <item>
      <title>Cognitive Biases</title>
      <link>https://notes.arne.me/cognitive-biases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/cognitive-biases/</guid>
      <description>A cognitive bias is describing how an instead of an objective input individuals base their behavior on their construction of reality.</description>
    </item>
    
    <item>
      <title>Colors Optimized for Color-Blind Individuals</title>
      <link>https://notes.arne.me/colors-optimized-for-color-blind-individuals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/colors-optimized-for-color-blind-individuals/</guid>
      <description>Accessibility in Web Development is important and should not be an afterthought. Bang Wong writes a post in Nature   , which offers guidelines to make graphics accessible to those with color vision deficiencies.
  Figure 1: P and D indicate simulated colors as seen by individuals with protanopia and deuteranopia, respectively.
  Here are the colors with copyable RGB and Hex codes:
   Color name RGB Hex     Black 0, 0, 0 #000   Orange 230, 159, 0 #e69f00   Sky blue 86, 180, 233 #56b4e9   Bluish green 0, 158, 115 #009e73   Yellow 240, 228, 66 #f0e442   Blue 0, 114, 178 #0072b2   Vermillion 213, 94, 0 #d55e00   Reddish purple 204, 121, 167 #cc79a7    CSS Custom Properties :root { --black: rgb(0, 0, 0); --orange: rgb(230, 159, 0); --sky-blue: rgb(86, 180, 233); --bluish-green: rgb(0, 158, 115); --yellow: rgb(240, 228, 66); --blue: rgb(0, 114, 178); --vermillion: rgb(213, 94, 0); --reddish-purple: rgb(204, 121, 167); } SASS Variables $black: rgb(0, 0, 0); $orange: rgb(230, 159, 0); $sky-blue: rgb(86, 180, 233); $bluish-green: rgb(0, 158, 115); $yellow: rgb(240, 228, 66); $blue: rgb(0, 114, 178); $vermillion: rgb(213, 94, 0); $reddish-purple: rgb(204, 121, 167); </description>
    </item>
    
    <item>
      <title>Compile Git SHA Into Rust</title>
      <link>https://notes.arne.me/compile-git-sha-into-rust/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/compile-git-sha-into-rust/</guid>
      <description>It often make sense to compile the Git SHA into the binary to be able to debug issues.
To achieve this in Rust , add the following to your build.rs:
useanyhow::Result;usestd::process::Command;fn main()-&amp;gt; Result&amp;lt;()&amp;gt;{letoutput=Command::new(&amp;#34;git&amp;#34;).args(&amp;amp;[&amp;#34;rev-parse&amp;#34;,&amp;#34;--short&amp;#34;,&amp;#34;HEAD&amp;#34;]).output()?;letgit_hash=String::from_utf8(output.stdout)?;println!(&amp;#34;cargo:rustc-env=GIT_SHA={}&amp;#34;,git_hash);Ok(())}Printing cargo:rustc-env=MY_ENV_KEY=&amp;lt;my-env-value&amp;gt; from your build.rs will make it available in your application with env!(&amp;quot;MY_ENV_KEY&amp;quot;) (which resolves to an ENV at compile time).</description>
    </item>
    
    <item>
      <title>Convert PNG to Byte Arrays</title>
      <link>https://notes.arne.me/convert-png-to-byte-arrays/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/convert-png-to-byte-arrays/</guid>
      <description>For developing on Embedded systems you might want to embed images to a byte array to be able to compile them into the binary.
There is an online tool that allows you to do this conversion: github.com/javl/image2cpp   </description>
    </item>
    
    <item>
      <title>cron</title>
      <link>https://notes.arne.me/cron/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/cron/</guid>
      <description>The software utility cron (or cron job) is a time-based job scheduler in Unix -like operating systems.
Crontab A crontab file defines the cron jobs of a user or system. You can edit it by running crontab -e.
Each line of a crontab represents a job. This is the schema:
# ┌───────────── minute (0 - 59) # │ ┌───────────── hour (0 - 23) # │ │ ┌───────────── day of the month (1 - 31) # │ │ │ ┌───────────── month (1 - 12) # │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday) # │ │ │ │ │ # * * * * * &amp;lt;command to execute&amp;gt; If a * is at one position, it is unrestricted.</description>
    </item>
    
    <item>
      <title>CSS</title>
      <link>https://notes.arne.me/css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/css/</guid>
      <description>Cascading Style Sheets is a style-sheet language used in Web Development .</description>
    </item>
    
    <item>
      <title>CSS Custom Properties</title>
      <link>https://notes.arne.me/css-custom-properties/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/css-custom-properties/</guid>
      <description>CSS Custom Properties (sometimes referred to as CSS Variables) allow you to define variables that can be used throughout a document.
Basic usage Seting a variable on :root defines it globally:
:root { --title-font-size: 1em; } You can also limit the scope of variables by defining them on any element, like this:
header { --fg: red; } Use the var function to lookup a variable:
header .title { font-size: var(--title-font-size); color: var(--fg); } </description>
    </item>
    
    <item>
      <title>Cyclic redundancy check</title>
      <link>https://notes.arne.me/crc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/crc/</guid>
      <description>An error-detecting code commonly used in Signal Processing to detect accidental changed to raw data. The check value is based on the remainder of a polynomial division of the data.
They are called CRCs because the check value is a redundancy and the algorithm is based on cyclic codes.
CRCs are popular because they are simple to implement in hardware, easy to analyze and good at detecting common errors cause by noise in transmission channels.</description>
    </item>
    
    <item>
      <title>Darkmode in CSS</title>
      <link>https://notes.arne.me/darkmode-in-css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/darkmode-in-css/</guid>
      <description>You can use the following @media query to detect system dark mode in CSS . In this example we use a dark background for dark mode:
@media (prefers-color-scheme: dark) { body { background: #000; } } I personally like to combine this with CSS Custom Properties to make the switch as seamless as possible.
Note that as of the writing of this post Internet Explorer (and some other minor browsers) did not support this query.</description>
    </item>
    
    <item>
      <title>DIY</title>
      <link>https://notes.arne.me/diy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/diy/</guid>
      <description>DIY stands for Do It Yourself.</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://notes.arne.me/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/docker/</guid>
      <description>Docker   is a container virtualization software. It&amp;rsquo;s mostly used for Software Engineering and SysOps .</description>
    </item>
    
    <item>
      <title>Docker multi-stage builds</title>
      <link>https://notes.arne.me/docker-multistage-builds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/docker-multistage-builds/</guid>
      <description>You probably don&amp;rsquo;t need the whole language toolchain in your Docker container. If you still want to use Docker to build you can use so-called multi-stage builds (official documentation   ).
Example This is an example for a Golang application:
FROMgolang:1 AS builderCOPY /app /WORKDIR/appRUN go build -o /bin/app ./appFROMalpine:latestRUN apk --no-cache add ca-certificatesCOPY --from=builder /bin/app .CMD [&amp;#34;.</description>
    </item>
    
    <item>
      <title>DWIM (Do what I mean)</title>
      <link>https://notes.arne.me/dwim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/dwim/</guid>
      <description>GNU Emacs has a concept called DWIM. Here&amp;rsquo;s an excerpt from the comment-dwim   command:
 The word “dwim” is an acronym for “Do What I Mean”; it indicates that this command can be used for many different jobs relating to comments, depending on the situation where you use it.
 Example Álvaro Ramírez wrote about this and provided a concrete example in his blogpost Emacs DWIM: do what I mean   .</description>
    </item>
    
    <item>
      <title>Electrical Engineering</title>
      <link>https://notes.arne.me/electrical-engineering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/electrical-engineering/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Embedded systems</title>
      <link>https://notes.arne.me/embedded-systems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/embedded-systems/</guid>
      <description>Embedded systems are computer systems that are embedded as part of a complete device, often including eletrical or electronic hardware and mechanical parts (such as sensors or motors).
They are often programmed in low-level languages like C.</description>
    </item>
    
    <item>
      <title>ESPHome</title>
      <link>https://notes.arne.me/esphome/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/esphome/</guid>
      <description>ESPHome   is a system to add ESP8266/ESP32 boards (see Embedded systems ) to your Smart Home using Home Assistant . It supports a multitude of input and output components.</description>
    </item>
    
    <item>
      <title>Eucalyptus Gunnii</title>
      <link>https://notes.arne.me/eucalyptus-gunnii/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/eucalyptus-gunnii/</guid>
      <description>Eucalyptus gunii (Cider Gum) is an evergreen small to medium-sized tree, native to Tasmania. It has a smooth bark and egg-shaped leaves and it can grow up to 9-21 meters tall (30-70 ft.) and 5-12 meters wide (18-40 ft.).
Handling If you want one for your Garden , here are the most important facts:
 Easy to grow, easy to care for (beginner friendly) Moderate resistance to cold (can take a short -10°C freeze).</description>
    </item>
    
    <item>
      <title>Expiring vs. Permanent Skills</title>
      <link>https://notes.arne.me/expiring-vs-permanent-skills/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/expiring-vs-permanent-skills/</guid>
      <description>Morgan Housel shares some Wisdom in a blogpost   , saying every field has two kinds of skills: expiring and permanent.
Expiring skills Expiring skills are vital at a given time but prone to disminishing as technology improves and a field evolves
They tend to get more attention, are more likely to be the &amp;ldquo;cool thing&amp;rdquo;.
Permanent skills Permanent were as essential 100 years ago as they are today, and will still be 100 years from now.</description>
    </item>
    
    <item>
      <title>Fix git-lfs Error</title>
      <link>https://notes.arne.me/fix-git-lfs-error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/fix-git-lfs-error/</guid>
      <description>At some point you might get this error on any Git operation when working with LFS:
remote: GitLab: LFS objects are missing. Ensure LFS is properly set up or try a manual &amp;#34;git lfs push --all&amp;#34;. If git lfs push --all doesn&amp;rsquo;t work, try this:
git lfs fetch --all upstream # or whatever branch you want to update from </description>
    </item>
    
    <item>
      <title>Fonts</title>
      <link>https://notes.arne.me/fonts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/fonts/</guid>
      <description>A font is a synonym for typeface although a typical typeface (or font family) consists of a number of fonts (regular, bold, italic, bolditalic).</description>
    </item>
    
    <item>
      <title>Format on save in Goland</title>
      <link>https://notes.arne.me/format-on-save-in-goland/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/format-on-save-in-goland/</guid>
      <description>If you use Goland , you most likely want to format on save, here&amp;rsquo;s how:
 Open Settings and go to Tools -&amp;gt; Filewatchers Click + and choose either gofmt or goimports (whatever you prefer)  That&amp;rsquo;s it! This should be the default in my opinion.</description>
    </item>
    
    <item>
      <title>French press</title>
      <link>https://notes.arne.me/french-press/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/french-press/</guid>
      <description>A French press is a coffee brewing device, developed in 1923 by Ugo Paolini.
Perfect coffee/water ratio The best ratio is 65g to 1L (2.3oz to 34 US fl oz for my imperial friends).</description>
    </item>
    
    <item>
      <title>Gardening</title>
      <link>https://notes.arne.me/gardening/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/gardening/</guid>
      <description>Gardening is the practice of growing and cultivating plants.</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://notes.arne.me/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/git/</guid>
      <description>Git is a version-control software used in Software Engineering , created by Linus Torvalds in 2005.</description>
    </item>
    
    <item>
      <title>git log</title>
      <link>https://notes.arne.me/git-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/git-log/</guid>
      <description>Git can be pretty verbose when running git log on your terminal which makes getting and overview pretty hard.
The solution Add the following to your .gitconfig:
[alias] l = log --graph --format=&amp;#39;%C(yellow)%h%Creset - %s %Cgreen(%cr) %C(blue)%an %Creset&amp;#39; Running ~git l~ will present the commits, one per line and even visualize merges.
Example (The real thing is more colorful.)
* 09a50b0 - Only preload code font on pages with code (25 hours ago) Arne Bahlo * 5473803 - Make titles point to permalink (25 hours ago) Arne Bahlo * bc3c745 - Use Iosevka for code blocks (25 hours ago) Arne Bahlo </description>
    </item>
    
    <item>
      <title>git wip</title>
      <link>https://notes.arne.me/git-wip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/git-wip/</guid>
      <description>Carolyn Van Slyck shares an amazing Git alias for showing the recent branches on her blog   .
 Have you ever run git branch and still wasn’t sure what each one is for and if it’s recent? Here’s a git alias, git wip, that displays your branches and when you last changed them. It’s really useful for remembering which one you were just working on, and which branches probably should be deleted.</description>
    </item>
    
    <item>
      <title>GNU Emacs</title>
      <link>https://notes.arne.me/gnu-emacs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/gnu-emacs/</guid>
      <description>Emacs   is a free/libre text editor.</description>
    </item>
    
    <item>
      <title>go get &lt;meta&gt; tag</title>
      <link>https://notes.arne.me/go-get-meta-tag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/go-get-meta-tag/</guid>
      <description>This note descibes how Golang figures out where to clone a dependency from.
How it works Go documents the functionality here: Remote import paths   .
This is the short version:
When running go get git.domain.com/foo/bar, go does the following:
 Fetch https://git.domain.com/foo/bar?go-get=1 Check if that page contains a meta tag like this (could also be a https url):   &amp;lt;meta name=&amp;#34;go-import&amp;#34; content=&amp;#34;git.domain.com git git@git.domain.com:foo/bar.git&amp;#34;&amp;gt;  Verify that git.</description>
    </item>
    
    <item>
      <title>Goland</title>
      <link>https://notes.arne.me/goland/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/goland/</guid>
      <description>Goland   is an IDE for Golang .</description>
    </item>
    
    <item>
      <title>Golang</title>
      <link>https://notes.arne.me/golang/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/golang/</guid>
      <description>A programming language designed at Google.</description>
    </item>
    
    <item>
      <title>Great Programming Fonts</title>
      <link>https://notes.arne.me/great-programming-fonts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/great-programming-fonts/</guid>
      <description>Here&amp;rsquo;s a list of programming Fonts I like, in no order:
 Iosevka    Operator Mono   ($199) Mono Lisa   (59 €) Fira Code    Pragmata Pro   ($199)  </description>
    </item>
    
    <item>
      <title>Hanlons Razor</title>
      <link>https://notes.arne.me/hanlons-razor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/hanlons-razor/</guid>
      <description>A philosophical razor that suggests a way of eliminating unlikely explanations for human behaviour. Likely named after Robert J. Hanlon, who submitted the statement to a joke book.
 Never attribute to malice that which is adequately explained by stupidity.
 </description>
    </item>
    
    <item>
      <title>Home Assistant</title>
      <link>https://notes.arne.me/home-assistant/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/home-assistant/</guid>
      <description>Home Assistant   is an open source home automation system with a lot of integrations, can run on a Raspberry Pi. Has integrations for HomeKit .</description>
    </item>
    
    <item>
      <title>HomeKit</title>
      <link>https://notes.arne.me/homekit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/homekit/</guid>
      <description>The Smart Home automation framework by Apple.</description>
    </item>
    
    <item>
      <title>How to find a good first Rust project</title>
      <link>https://notes.arne.me/taking-rust-for-a-test-drive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/taking-rust-for-a-test-drive/</guid>
      <description>Lotte James have a few tips on how to introduce Rust into your workspace on the ferrous systems blog   .
Aim to answer three questions
 How can we minimize cost or risk to projects and timelines? How can we maximize rewards (reliability, efficiency, developer happiness) How can we maximize learnings from the first trial?  Qualitites of a good first challenge  Pick a problem domain you already know.</description>
    </item>
    
    <item>
      <title>How to start a podcast</title>
      <link>https://notes.arne.me/how-to-start-a-podcast/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/how-to-start-a-podcast/</guid>
      <description>This is an opinionated guide on how to start a podcast.
Domain This is the most important thing. So important it has its own section. Get your own domain for your podcast. People subscribe to a feed URL, if that URL belongs to a provider you won&amp;rsquo;t be able to switch easily in the future.
.fm domains are cool for podcasts, but also expensive.
Recording Microphone Okay obviously you need a microphone.</description>
    </item>
    
    <item>
      <title>Hugo</title>
      <link>https://notes.arne.me/hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/hugo/</guid>
      <description>Hugo   is a static site generator (see Web Development ) written in Golang .</description>
    </item>
    
    <item>
      <title>Ian McEwan, Why Do You Want to Live Forever?</title>
      <link>https://notes.arne.me/ian-mcewan-why-do-you-want-to-live-forever/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/ian-mcewan-why-do-you-want-to-live-forever/</guid>
      <description>In the first english episode of the Alles Gesagt? podcast , Chritoph Amend and Jochen Wegner interview the british novelist Ian McEwan   and talk about Brexit, climate change and his family.
 17:45 Alternative to democracy: Epistocracy: Only People with a certain level of education are allowed to vote (e.g. only people with a degree). 26:45 Creative Pessimism about Climate Change 39:30 Advise to novelists: Find some Detail in life that excites you  </description>
    </item>
    
    <item>
      <title>Install CircuitPython on MagTag</title>
      <link>https://notes.arne.me/install-circuitpython-on-magtag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/install-circuitpython-on-magtag/</guid>
      <description>This is a quick summary of the official guide   on how to install CircuitPython on a MagTag .
Load with UF2 Bootloader This is the easiest option. If your MagTag has a black front it came with UF2 installed.
 Download the latest CircuitPython release    Attach your MagTag to a computer Launch UF2 by double-clicking the Reset button (might take a few tries) If UF2 is installed you will see a new disk drive appear, called MAGTAGBOOT Copy the UF2 file onto the MAGTAGBOOT drive  Your MagTag should auto-reset into CircuitPython , or you may need to press reset.</description>
    </item>
    
    <item>
      <title>Interactive Rebase</title>
      <link>https://notes.arne.me/interactive-rebase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/interactive-rebase/</guid>
      <description>Interactive rebase is a Git command that supports manipulating your Git history. Please note that this requires some understanding of how Git works.
The problem Let&amp;rsquo;s say we have the following Git history (the last 5 commits at the time of tihs writing):
e5b6bb7 - Add Darkmode in CSS b956b7b - Fix formatting on Subset Webfonts a0c2551 - Add Eucalyptus Gunii 21909d5 - Update Subset Webfonts 4a5dc2e - Parse sitemap.xml for font subsetting You see that commit b956b7b (Fix formatting on Subset) fixes an issue introduced in 21909d5 (Update Subset Webfonts).</description>
    </item>
    
    <item>
      <title>iTerm2</title>
      <link>https://notes.arne.me/iterm2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/iterm2/</guid>
      <description>iTerm2   is a terminal emulator for macOS .</description>
    </item>
    
    <item>
      <title>JavaScript</title>
      <link>https://notes.arne.me/javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/javascript/</guid>
      <description>JavaScript is a dynamic, just-in-time compiled and multi-paradigm programming language that conforms to the ECMAScript   specification.</description>
    </item>
    
    <item>
      <title>K3s</title>
      <link>https://notes.arne.me/k3s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/k3s/</guid>
      <description>K3s   is a lightweigt (and simpler) Kubernetes in a single &amp;lt;40MB binary. Often set up by SysOps teams.</description>
    </item>
    
    <item>
      <title>Kevin Kelly</title>
      <link>https://notes.arne.me/kevin-kelly/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/kevin-kelly/</guid>
      <description>Kevin Kelly is Senior Maverick for Wired   magazine, which he also co-founded. On his website kk.org   he shares his thoughts in The Technium   and has sub-pages for Cool Tools   or True Films   .</description>
    </item>
    
    <item>
      <title>Kubernetes</title>
      <link>https://notes.arne.me/kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/kubernetes/</guid>
      <description>Kubernetes   (or K8s) is an open-source container orchestrator. It can deploy Docker containers and is often set up by SysOps teams.</description>
    </item>
    
    <item>
      <title>Leadership</title>
      <link>https://notes.arne.me/leadership/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/leadership/</guid>
      <description>Leadership is a skill of an invidiual or a group to lead, influcence or guide other individuals, teams, or entire organizations.</description>
    </item>
    
    <item>
      <title>Learn Javascript</title>
      <link>https://notes.arne.me/learn-javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/learn-javascript/</guid>
      <description>So you want to learn JavaScript ? Here&amp;rsquo;s a collection of resources I found over time that might be of help (although I used different resources back in the day).
Things I would try first  You Don&amp;amp;rsquo;t Know JS    The Modern JavaScript Tutorial    Eloquent JavaScript     Even more  freeCodeCamp    Khan Academy    JavaScript Garden    JavaScript on MDN Web Docs    JavaScript Notes for Professionals    Learn javascript in Y Minutes    JavaScript for Cats    JavaScript: The Good Parts     Sources  Tweet by Alexandria    Tweet by Danny Thompson     </description>
    </item>
    
    <item>
      <title>Learn Networking</title>
      <link>https://notes.arne.me/learn-networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/learn-networking/</guid>
      <description>So you want to lean Networking ? Here&amp;rsquo;s a collection of resources I found over time that might be of help (although I used different resources back in the day).
Things I would try first  Beej&amp;amp;rsquo;s Guide to Network Programming    Kurose &amp;amp; Ross, Computer Networking: A Top-Down Approach     Even more  Tanenbaum &amp;amp; Wetherall, Computer Networks    High Performance Browser Networking     Sources  Ask HN: Good books/courses to learn networking essentials for web developers?</description>
    </item>
    
    <item>
      <title>Learn Python</title>
      <link>https://notes.arne.me/learn-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/learn-python/</guid>
      <description>So you want to learn Python ? Here&amp;rsquo;s a collection of resources I found over time that might be of help (although I used different resources back in the day).
Things I would try first  100 Page Python Intro    Cosmic Python    Beej’s Guide to Python Programming    Beyond the Basic Stuff with Python     Even more  20 Python libraries you aren’t using (but should)    Guide to Python’s magic methods    Full Stack Python    Biopython Tutorial and Cookbook    Clean Architectures in Python     Sources  Tweet by Sunil Kumar     </description>
    </item>
    
    <item>
      <title>Learn Vim</title>
      <link>https://notes.arne.me/learn-vim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/learn-vim/</guid>
      <description>So you want to lean Vim ? Here&amp;rsquo;s a collection of resources I found over time that might be of help (although I used different resources back in the day).
Things I would try first  Is Vim Really Not For You? A Beginner Guide     </description>
    </item>
    
    <item>
      <title>Luks</title>
      <link>https://notes.arne.me/luks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/luks/</guid>
      <description>LUKS (Linux Unified Key Setup) is a full disk encryption specification for Unix systems (originally intended for Linux only). It allows you to easily create an encrypted volume.
Install On Ubuntu/Debian, run: apt-get install cryptsetup.
Set up Run the following to create an encrypted volume on /dev/sdb:
$ cryptsetup luksFormat /dev/sdb Please note that this delete the contents of /dev/sdb.
After that, open the volume and create a file system:</description>
    </item>
    
    <item>
      <title>macOS</title>
      <link>https://notes.arne.me/macos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/macos/</guid>
      <description>macOS is an operating system developed by Apple.</description>
    </item>
    
    <item>
      <title>MagTag</title>
      <link>https://notes.arne.me/magtag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/magtag/</guid>
      <description>  The MagTag   is an embedded device , which combines a ESP32-S2 wireless module, a 2.9&amp;rdquo; grayscale E-Ink display. It&amp;rsquo;s called MagTag because you can attach magnetic feet.
Features  USB-C Four RGB LEDs (&amp;ldquo;NeoPixels&amp;rdquo;) Four buttons Triple-axis accelerometer Speaker/Buzzer STEMMA QT port Two STEMMA 3 pin JST connectors Support for external batteries  </description>
    </item>
    
    <item>
      <title>Mark external links in Hugo</title>
      <link>https://notes.arne.me/mark-external-links-in-hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/mark-external-links-in-hugo/</guid>
      <description>If you use the Goldmark renderer   in Hugo you can use so-called Markdown Render Hooks   to customize the render of some elements (as of May 2021 only images, links and headings are supported). See Anchored headings in Hugo to see how to use the same principle to customize your headings.
To mark external links in Hugo, create the following file: layouts/_default/_markup/render-link.html and fill with with a Go template, for example:</description>
    </item>
    
    <item>
      <title>Multiple Gitconfigs</title>
      <link>https://notes.arne.me/multiple-gitconfigs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/multiple-gitconfigs/</guid>
      <description>If you use the same computer for both personal and work git repositories, you probably want to use a different email address for each.
One solution for this is having multiple .gitconfig files that override each other based on the directory you&amp;rsquo;re in.
[includeIf &amp;#34;gitdir:~/Developer/work/&amp;#34;] path = .gitconfig-work </description>
    </item>
    
    <item>
      <title>Networking</title>
      <link>https://notes.arne.me/networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/networking/</guid>
      <description>Networks are used in computer systems.</description>
    </item>
    
    <item>
      <title>Node.js</title>
      <link>https://notes.arne.me/node-js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/node-js/</guid>
      <description>Node.js is an open-source backend JavaScript runtime environment built on the V8 engine.</description>
    </item>
    
    <item>
      <title>Node.js Intl and ICU</title>
      <link>https://notes.arne.me/node-js-intl-and-icu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/node-js-intl-and-icu/</guid>
      <description>If you use i18n features like Intl   in your Node.js application, you need ICU (International Components for Unicode). Your local node installation will most likely have the full ICU installed, but it&amp;rsquo;s often missing on servers or containers.
Node will fall back to the locale it has installed, so consider writing a test to make sure your locale is available. Below are two options on how to get full ICU data.</description>
    </item>
    
    <item>
      <title>NRZ (Non-return-to-zero)</title>
      <link>https://notes.arne.me/nrz/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/nrz/</guid>
      <description>NRZ line code is a binary code in which ones an zeros are represented by a significant condition and no netural or rest condition. It&amp;rsquo;s often used in Signal Processing .
Variants    Code name Complete name Description     NRZ(L) Non-return-to-zero level Raw binary bits without any coding. Typically binary 1 maps to high and binary 0 to low   NRU(I) Non-return-to-zero inverted Either NRZ(M) or NRZ(S)   NRZ(M) Non-return-to-zero mark 0 maps to constant, 1 maps to toggle   NRZ(I) Non-return-to-zero space 0 maps to toggle, 1 maps to constant   NRZ(C) Non-return-to-zero change ?</description>
    </item>
    
    <item>
      <title>Option to Result in Rust</title>
      <link>https://notes.arne.me/option-to-result-rust/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/option-to-result-rust/</guid>
      <description>This is how you convert from Option to Result and vice versa in Rust .
Option -&amp;gt; Result leterr=anyhow!(&amp;#34;some error&amp;#34;);letx=Some(&amp;#34;foo&amp;#34;);assert_eq!(x.ok_or(err),Ok(&amp;#34;foo&amp;#34;));Result -&amp;gt; Option letx=Ok(&amp;#34;foo&amp;#34;);assert_eq!</description>
    </item>
    
    <item>
      <title>Org mode</title>
      <link>https://notes.arne.me/org-mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/org-mode/</guid>
      <description>Org mode   is a major mode for GNU Emacs . Quoting the homepage:
 Org mode is for keeping notes, maintaining to-do lists, planning projects, authoring documents, computational notebooks, literate programming and more — in a fast and effective plain text system.
 </description>
    </item>
    
    <item>
      <title>Philosophy</title>
      <link>https://notes.arne.me/philosophy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/philosophy/</guid>
      <description>φιλοσοφία, love of wisdom, is the study of general and fundamental questions.</description>
    </item>
    
    <item>
      <title>Podcasts</title>
      <link>https://notes.arne.me/podcasts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/podcasts/</guid>
      <description>A podcast is a series of audio files, distributed decentralized and consumed via an XML feed.</description>
    </item>
    
    <item>
      <title>Politics</title>
      <link>https://notes.arne.me/politics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/politics/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Print Type in Rust</title>
      <link>https://notes.arne.me/print-type-in-rust/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/print-type-in-rust/</guid>
      <description>If you want to print the type in Rust (similar to %T in Go ), here&amp;rsquo;s a snippet:
fn type_of&amp;lt;T&amp;gt;(_: &amp;amp;T)-&amp;gt; String {format!</description>
    </item>
    
    <item>
      <title>Python</title>
      <link>https://notes.arne.me/python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/python/</guid>
      <description>Python   is a programming language with emphasis on code readability.</description>
    </item>
    
    <item>
      <title>Python Developer Environment</title>
      <link>https://notes.arne.me/python-dev-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/python-dev-environment/</guid>
      <description>There are a thousand possible approaches to a good developer environment, this is an iditial approach to get started with Python if you don&amp;rsquo;t yet know what you like.
Editor and plugins Visual Studio Code   (or VSCode) is a popular choice and has lots of support. If you care about these things, VSCodium   provides an open-source variant of VS Code.
Check Python in Visual Studio Code   for a guide to install Python and the proper extension.</description>
    </item>
    
    <item>
      <title>Rclone</title>
      <link>https://notes.arne.me/rclone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/rclone/</guid>
      <description>Rclone   is a command line program to manage files on cloud storage. It supports lots of cloud providers and encryption. It&amp;rsquo;s often used by SysOps teams.
Use cases There is a lot you can do with rclone so this is just a list of things that might be useful to you.
Encrypted backup Create remote The first thing you want to do is set up a remote (storage), run the following:</description>
    </item>
    
    <item>
      <title>Remove an element from a slice in Go</title>
      <link>https://notes.arne.me/remove-an-element-from-a-slice-go/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/remove-an-element-from-a-slice-go/</guid>
      <description>Since Go slices don&amp;rsquo;t have a remove method or anything similar you need to do it yourself. Stack Overflow has a great thread   on the best ways to achieve this, summarized here:
Order matters If you need to retain the order, use this logic:
func remove(slice []int, s int) []int { return append(slice[:s], slice[s+1:]...) } This is inefficient because you may end up moving all elements, so only do this if you need to keep the order.</description>
    </item>
    
    <item>
      <title>Rust</title>
      <link>https://notes.arne.me/rust/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/rust/</guid>
      <description>Rust   is a programming language developed by Mozilla with a focus on performance and safety.</description>
    </item>
    
    <item>
      <title>SASS</title>
      <link>https://notes.arne.me/sass/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/sass/</guid>
      <description>SASS   (or SCSS) is a preprocessor for CSS .
SASS vs. SCSS SCSS SCSS uses the file extension .scss and is a superset of CSS (with a few exceptions), which means all valid CSS is valid SCSS as well.
SASS (The Indented Syntax) This was the original syntax and uses .sass.. It doesn&amp;rsquo;t use curly braces but instead relies on intentation.
Advantages over CSS Nesting Instead of writing this in CSS:</description>
    </item>
    
    <item>
      <title>Shelly</title>
      <link>https://notes.arne.me/shelly/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/shelly/</guid>
      <description>Shelly   provides relatively cheap in-wall devices that can control sockets, light switches, garage doors, blinds, etc. Integrates with Home Assistant .</description>
    </item>
    
    <item>
      <title>Signal Processing</title>
      <link>https://notes.arne.me/signal-processing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/signal-processing/</guid>
      <description>An Electrical Engineering subfield, focussed on analysing, modifying and synthesizing signals.</description>
    </item>
    
    <item>
      <title>Signed Commits on macOS</title>
      <link>https://notes.arne.me/signed-commits-on-macos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/signed-commits-on-macos/</guid>
      <description>This is how you sign your Git commits on macOS ).
 Install the GPG Suite   (brew install --cask gpg-suite) Open the GPG Keychain application and create a new key with the email address you use for git commits Run git config --global commit.gpgsign true to enable GPG for all repositories Run git config --global gpg.program gpg2 to make sure git uses gpg2 Copy the Key ID from the Key Details in GPG Keychain Run git config --global user.</description>
    </item>
    
    <item>
      <title>Smart Home</title>
      <link>https://notes.arne.me/smart-home/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/smart-home/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Smart Voting</title>
      <link>https://notes.arne.me/smart-voting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/smart-voting/</guid>
      <description>Smart Voting is a tactical political voting strategy put forward by the team of Alexej Navalny. The goal is to consolidate the votes to prevent the vote for a party/candidate.</description>
    </item>
    
    <item>
      <title>Software Engineering</title>
      <link>https://notes.arne.me/software-engineering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/software-engineering/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Stacked Cards with CSS</title>
      <link>https://notes.arne.me/stacked-cards-with-css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/stacked-cards-with-css/</guid>
      <description>If you want to implement stacked cards, there&amp;rsquo;s a great guide by CSS-Tricks   on how to achieve this.
We want to be able to stack cards when scrolling down. Check out the website of Corey Ginnivan   for an example.
First, create your cards in CSS as you would otherwise.
Then add the following CSS:
.card { position: sticky; top: 10px; } This will lead to cards stopping at 10px from the top and the following cards to float over them.</description>
    </item>
    
    <item>
      <title>Sticky Header ScrollTo</title>
      <link>https://notes.arne.me/sticky-header-scrollto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/sticky-header-scrollto/</guid>
      <description>When you scroll to an anchor and the sticky header covers it up, you can fix it with one line of CSS :
.heading { scroll-margin-top: 72px; } </description>
    </item>
    
    <item>
      <title>Subbu Allamaraju&#39;s Leadership Document — 2021 Edition</title>
      <link>https://notes.arne.me/subbu-allamarajus-leadership-document-2021-edition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/subbu-allamarajus-leadership-document-2021-edition/</guid>
      <description>Subbu Allamaraju is technology leader at the Expedia Group at the time of writing this note. He writes about 3 believs and 6 behaviours for Leadership on his blog   .
Beliefs Leadership is about being a better person.  Leadership is much less about what you do and much more about who you are. — John C. Maxwell
  One must learn to lead themselves before one can lead others A leaders insecurities, opinions, bad habits and ego can come in the way of deciding what&amp;rsquo;s right for the team  To create a high performing team, you must help others grow as leaders  You can&amp;rsquo;t create a high-performing team when you neglect team member&amp;rsquo;s leadership development Developing people is a force multiplier-  Leaders must set unarguable goals for the team they lead  It’s necessary for a real leader to articulate what I call unarguable goals and aspirations for the institution that they lead.</description>
    </item>
    
    <item>
      <title>Subset Webfonts</title>
      <link>https://notes.arne.me/subset-webfonts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/subset-webfonts/</guid>
      <description>The problem Webfonts can have relatively large sizes. Iosevka   for example is 660kb for one font.
The solution You can subset your fonts, i.e. generate a font with only the glyphs you need. With font subsetting I was able to reduce the size of Iosevka from 660kb to 12kb.
How to  Install glyphhanger   with npm Install fonttools, brotli and zopfli with pip Start your local server (you can skip this if you want to use a remote target) Call glyphhanger with the remote target and your base font.</description>
    </item>
    
    <item>
      <title>SysOps</title>
      <link>https://notes.arne.me/sysops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/sysops/</guid>
      <description>System operators are administrators of computer systems.</description>
    </item>
    
    <item>
      <title>System Font Stack</title>
      <link>https://notes.arne.me/system-font-stack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/system-font-stack/</guid>
      <description>If you don&amp;rsquo;t want to use Webfonts due to size or other reasons, you can fall back to system fonts to provide an integrated experience.
This is what GitHub uses:
body { font-family: -apple-system, BlinkMacSystemFont, &amp;#34;Segoe UI&amp;#34;, Roboto, Helvetica, Arial, sans-serif, &amp;#34;Apple Color Emoji&amp;#34;, &amp;#34;Segoe UI Emoji&amp;#34;, &amp;#34;Segoe UI Symbol&amp;#34;; } </description>
    </item>
    
    <item>
      <title>Unix</title>
      <link>https://notes.arne.me/unix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/unix/</guid>
      <description>Unix is a family of multitasking, multiuser computer operating systems. Originally developed by Ken Thompson, Dennis Ritchie, and others.</description>
    </item>
    
    <item>
      <title>Vim</title>
      <link>https://notes.arne.me/vim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/vim/</guid>
      <description>Vim is a texeditor. The name comes from Vi IMproved as it is a clone (with additions) of vi, a text editor program for Unix. It was release to the public in 1991.
Modes Vim has 6 basic modes:
 Normal mode the default mode, used for editor commands Visual mode like normal mode, but can highligh areas of text and editor commands will run on that highlighted text Select mode like visual mode but if you enter a printable character, carriage return, new line or line feed Vim will insert the character and start insert mode Insert mode similar to editing in most editors Cmdline mode supports a single line at the bottom of the window for commands Ex mode similar to Cmdline mode but on completion it prompts for another Ex command (you almost never want this mode)  </description>
    </item>
    
    <item>
      <title>Voting</title>
      <link>https://notes.arne.me/voting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/voting/</guid>
      <description></description>
    </item>
    
    <item>
      <title>WCAG</title>
      <link>https://notes.arne.me/wcag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/wcag/</guid>
      <description>WCAG are the Web Content Accessibility Guidelines. You should check out the full reference   if you&amp;rsquo;re developing a website .
Here are the most basic points:
 All non-text content needs to have a text alternative that serves the equivalent purpose. Text needs to have a contrast ratio of at least 4.5:1. All functionality of the content needs to be operable through a keyboard There needs to be a mechanism to bypass blocks of content that are repeatet on multiple web pages Prefer native elements over fancy JS Prefer special html element over div (i.</description>
    </item>
    
    <item>
      <title>Web Development</title>
      <link>https://notes.arne.me/web-development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/web-development/</guid>
      <description>Web development is a form of Software Engineering that involves developing a web site.</description>
    </item>
    
    <item>
      <title>Webfonts</title>
      <link>https://notes.arne.me/webfonts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/webfonts/</guid>
      <description>Webfonts are Fonts , which are optimized for web browsers, used in Web Development .</description>
    </item>
    
    <item>
      <title>Wisdom</title>
      <link>https://notes.arne.me/wisdom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://notes.arne.me/wisdom/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>